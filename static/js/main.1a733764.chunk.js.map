{"version":3,"sources":["components/Loader/Loader.lazy.tsx","pages/Home/Home.lazy.tsx","pages/Skills/Skills.lazy.tsx","pages/Projects/Projects.lazy.tsx","pages/WorkExperience/WorkExperience.lazy.tsx","pages/Events/Events.lazy.tsx","App.routes.tsx","components/Sidebar/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LazyLoader","lazy","Loader","props","fallback","LazyHome","Home","LazySkills","Skills","LazyProjects","Projects","LazyWorkExperience","WorkExperience","LazyEvents","routes","title","path","component","exact","icon","Sidebar","icons","state","loading","data","fetch","then","res","json","result","setState","error","className","src","map","route","i","key","activeClassName","to","this","data-testid","setLogo","setRoutes","item","target","rel","href","link","Component","App","width","height","sidebarVisible","updateWindowDimensions","bind","window","addEventListener","ReactGA","initialize","removeEventListener","innerWidth","innerHeight","onClick","toggleSidebar","mode","pageHeader","basename","process","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1a733764.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\n\nconst LazyLoader = lazy(() => import('./Loader'));\n\nconst Loader = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyLoader {...props} />\n  </Suspense>\n);\n\nexport default Loader;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyHome = lazy(() => import('./Home'));\n\nconst Home = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyHome {...props} />\n  </Suspense>\n);\n\nexport default Home;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazySkills = lazy(() => import('./Skills'));\n\nconst Skills = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazySkills {...props} />\n  </Suspense>\n);\n\nexport default Skills;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyProjects = lazy(() => import('./Projects'));\n\nconst Projects = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyProjects {...props} />\n  </Suspense>\n);\n\nexport default Projects;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyWorkExperience = lazy(() => import('./WorkExperience'));\n\nconst WorkExperience = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyWorkExperience {...props} />\n  </Suspense>\n);\n\nexport default WorkExperience;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazyEvents = lazy(() => import('./Events'));\n\nconst Events = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyEvents {...props} />\n  </Suspense>\n);\n\nexport default Events;\n","import Home from './pages/Home/Home.lazy';\nimport Skills from './pages/Skills/Skills.lazy';\nimport Projects from './pages/Projects/Projects.lazy';\n// import Contact from './pages/Contact/Contact.lazy';\nimport WorkExperience from './pages/WorkExperience/WorkExperience.lazy';\nimport Events from 'pages/Events/Events.lazy';\n\nexport const routes = [\n  {\n    title: 'About',\n    path: \"/\",\n    component: Home,\n    exact: true,\n    icon: 'FaUserTie'\n  },\n  {\n    title: 'Work Experience',\n    path: \"/work-experience\",\n    component: WorkExperience,\n    exact: true,\n    icon: 'FaClipboardList'\n  },\n  {\n    path: \"/skills\",\n    title: 'Skills',\n    component: Skills,\n    exact: true,\n    icon: 'FaWrench'\n  },\n  {\n    path: \"/projects\",\n    title: 'Projects',\n    component: Projects,\n    exact: true,\n    icon: 'FaToolbox'\n  },\n  {\n    path: \"/events\",\n    title: 'Events',\n    component: Events,\n    exact: true,\n    icon: 'FaCalendarAlt'\n  }\n  // {\n  //   path: \"/contact\",\n  //   title: 'Contact',\n  //   component: Contact,\n  //   exact: true,\n  //   icon: 'FaHandshake'\n  // }\n];\n","import React, { Component } from 'react';\nimport { FaCodepen, FaEnvelope, FaFacebookSquare, FaGithubAlt, FaHeart, FaLinkedin, FaUserTie, FaWrench, FaToolbox, FaHandshake, FaClipboardList, FaCalendarAlt } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\n\nimport { routes } from '../../App.routes';\nimport SVG from 'react-inlinesvg';\nimport Loader from '../Loader/Loader.lazy';\n\nclass Sidebar extends Component {\n  icons: any = {\n    'facebook': <FaFacebookSquare />,\n    'linkedin': <FaLinkedin />,\n    'github': <FaGithubAlt />,\n    'mail': <FaEnvelope />,\n    'codepen': <FaCodepen />,\n    'FaUserTie': <FaUserTie />,\n    'FaWrench': <FaWrench />,\n    'FaToolbox': <FaToolbox />,\n    'FaHandshake': <FaHandshake />,\n    'FaClipboardList': <FaClipboardList />,\n    'FaCalendarAlt': <FaCalendarAlt />\n  }\n\n  state = {\n    loading: true,\n    data: []\n  };\n\n  componentDidMount () {\n    fetch('assets/json/social-sites.json')\n      .then(res => res.json())\n      .then((result) => {\n        this.setState({ loading: false, data: result });\n      }, (error) => {\n        this.setState({ loading: false, data: [] });\n      });\n  }\n\n  setLogo () {\n    const logo = () => <SVG src=\"/assets/images/logo.svg\" />\n    return (\n      <div className=\"portfolio_sidebar__logo\">\n        { logo() }\n      </div>\n    )\n  }\n\n  setRoutes () {\n    return (\n      <div className=\"portfolio_sidebar__links\">\n        {routes.map((route, i) => (\n          <div className=\"portfolio_sidebar__links__item\" key={route.path}>\n            <NavLink exact={true} activeClassName=\"active\" to={route.path}>{this.icons[route.icon]} {route.title}</NavLink>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n  render () {\n    if (this.state.loading) {\n      return (<Loader />)\n    }\n\n    return (\n      <div className=\"portfolio_sidebar\" data-testid=\"Sidebar\">\n        { this.setLogo() }\n        { this.setRoutes() }\n\n        <div className=\"portfolio_sidebar__social\">\n          <div className=\"d-flex\">\n            {this.state.data.map((item: any, i: number) => (\n              <div className=\"portfolio_sidebar__social__item\" key={i}>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={item.link}>{this.icons[item['icon']]}</a>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"portfolio_sidebar__footer\">\n          <small>Made with <FaHeart /> using <a href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">React</a>.</small>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar;","import './App.scss';\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { routes } from './App.routes';\nimport { FaBars } from 'react-icons/fa';\nimport SVG from 'react-inlinesvg';\nimport ReactGA from 'react-ga';\n\nexport class App extends Component {\n  state = { width: 0, height: 0, sidebarVisible: false };\n\n  constructor(props: any) {\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    ReactGA.initialize('noelitocalma@gmail.com');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  pageHeader () {\n    if (this.state.width <= 768) {\n      const logo = () => <SVG src=\"/assets/images/logo.svg\" />\n      return (\n        <div className=\"portfolio_header\">\n          <div className=\"logo\"> { logo() }</div>\n          <FaBars onClick={() => this.toggleSidebar()} />\n        </div>\n      )\n    }\n  }\n\n  toggleSidebar () {\n    const mode = this.state.sidebarVisible;\n    this.setState({ sidebarVisible: !mode });\n  }\n\n  render () {\n    return (\n      <div className={'portfolio ' + (this.state.sidebarVisible ? 'open-sidebar' : '')}>\n        { this.pageHeader() }\n\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\n          <Sidebar></Sidebar>\n          <div className=\"portfolio_content\">\n            <Switch>\n              {routes.map((route, i) => (\n                <Route key={i} {...route} />\n              ))}\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}